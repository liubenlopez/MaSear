package GUI;

import Class.Kernel;
import Class.LoadThread;
import Class.PeptideAnalysis;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author liubenl
 */
public class GUI extends javax.swing.JFrame {

    public GUI() {
        initComponents();
        setLocationRelativeTo(null);
        try {
            setTitle("MaSear 0.1");
            Image image = new javax.swing.ImageIcon(getClass().getResource("/resources/icono.png")).getImage();
            setIconImage(image);
        } catch (Exception e) {
        }
        try {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            this.addWindowListener(new WindowListener() {

                public void windowOpened(WindowEvent e) {
                }

                public void windowClosing(WindowEvent e) {
                    int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Do you want exit of the application?", "", 0);
                    if (showConfirmDialog == 0) {
                        System.exit(0);
                    }
                }

                public void windowClosed(WindowEvent e) {
                }

                public void windowIconified(WindowEvent e) {
                }

                public void windowDeiconified(WindowEvent e) {
                }

                public void windowActivated(WindowEvent e) {
                }

                public void windowDeactivated(WindowEvent e) {
                }
            });
        } catch (Exception e) {
        }
        jSplitPane1.setDividerLocation(jSplitPane1.getMaximumDividerLocation());
        jPanelProteinProperties.setVisible(false);
        jPanelSearchSeq.setVisible(false);
        jLabelLoadingProteins.setVisible(false);
        jLabelCancelLoad.setEnabled(false);
        String[] items = new String[100];
        items[0] = "-";
        for (int i = 1; i < 100; i++) {
            items[i] = String.valueOf(i);
        }
        jComboConcat.setModel(new javax.swing.DefaultComboBoxModel(items));
        try {
            model.insert(node, 0);
            jt = new JTree(model);
            jTree1.setModel(jt.getModel());
            createTables();
            refreshList();
        } catch (Exception e) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        ConectDB = new javax.swing.JButton();
        CreateDB = new javax.swing.JButton();
        OpenDB = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        LoadPDBFile = new javax.swing.JButton();
        SearchPDB = new javax.swing.JButton();
        sequence = new javax.swing.JButton();
        SavePDB = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        EditCol = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        Help = new javax.swing.JButton();
        jPanelDataBase = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jPanelEstate = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelCountLoaded = new javax.swing.JLabel();
        jLabelLoadingProteins = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabelCancelLoad = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanelSearcher = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanelProteinProperties = new javax.swing.JPanel();
        jLabelProteinProperties = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanelSearchProt = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldPDBID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jCheckBoxLength = new javax.swing.JCheckBox();
        jTextlengthMIN = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextlengthMAX = new javax.swing.JTextField();
        jCheckBoxResolution = new javax.swing.JCheckBox();
        jTextResolMIN = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextResolMAX = new javax.swing.JTextField();
        jCheckBoxHeteroA = new javax.swing.JCheckBox();
        jCheckBoxNucleisA = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListExpMethod = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListCommonOrg = new javax.swing.JList();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanelSearchSeq = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jExpression = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboConcat = new javax.swing.JComboBox();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jDAA = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jUAA = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        saveInDB = new javax.swing.JButton();
        saveInFile = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADS x PDB");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setEnabled(false);

        ConectDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/conect1.png"))); // NOI18N
        ConectDB.setText("Conect");
        ConectDB.setToolTipText("Conect to existing data base...");
        ConectDB.setFocusable(false);
        ConectDB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ConectDB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ConectDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConectDBActionPerformed(evt);
            }
        });
        jToolBar1.add(ConectDB);

        CreateDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/32px-Crystal_Clear_action_db_add.png"))); // NOI18N
        CreateDB.setText("New ");
        CreateDB.setToolTipText("Ceate new data base...");
        CreateDB.setFocusable(false);
        CreateDB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CreateDB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        CreateDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateDBActionPerformed(evt);
            }
        });
        jToolBar1.add(CreateDB);

        OpenDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/32px-Crystal_Clear_app_kexi.png"))); // NOI18N
        OpenDB.setText("Open");
        OpenDB.setToolTipText("Open data base...");
        OpenDB.setFocusable(false);
        OpenDB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        OpenDB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        OpenDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenDBActionPerformed(evt);
            }
        });
        jToolBar1.add(OpenDB);
        jToolBar1.add(jSeparator8);

        LoadPDBFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/loadpdb.png"))); // NOI18N
        LoadPDBFile.setText("LoadPDB");
        LoadPDBFile.setToolTipText("Load PDB file to base...");
        LoadPDBFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LoadPDBFile.setFocusable(false);
        LoadPDBFile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        LoadPDBFile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        LoadPDBFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadPDBFileActionPerformed(evt);
            }
        });
        jToolBar1.add(LoadPDBFile);

        SearchPDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/search1.png"))); // NOI18N
        SearchPDB.setText(" Proteins  ");
        SearchPDB.setToolTipText("Search proteins..");
        SearchPDB.setFocusable(false);
        SearchPDB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SearchPDB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SearchPDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchPDBActionPerformed(evt);
            }
        });
        jToolBar1.add(SearchPDB);

        sequence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Sequece.png"))); // NOI18N
        sequence.setText("Sequences");
        sequence.setToolTipText("Search sequences...");
        sequence.setFocusable(false);
        sequence.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sequence.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sequence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequenceActionPerformed(evt);
            }
        });
        jToolBar1.add(sequence);

        SavePDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        SavePDB.setText("  Export  ");
        SavePDB.setToolTipText("Export selected PDB files.");
        SavePDB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SavePDB.setFocusable(false);
        SavePDB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SavePDB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SavePDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavePDBActionPerformed(evt);
            }
        });
        jToolBar1.add(SavePDB);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/32px-Crystal_Clear_action_apply.png"))); // NOI18N
        jButton1.setText("Select all");
        jButton1.setToolTipText("Selec/Cancel all...");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        jButton2.setText("  Delete  ");
        jButton2.setToolTipText("Delete PDB of data base...");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);
        jToolBar1.add(jSeparator9);

        EditCol.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/properties.png"))); // NOI18N
        EditCol.setText("Properties");
        EditCol.setToolTipText("Show the protein properties...");
        EditCol.setFocusable(false);
        EditCol.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EditCol.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EditCol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditColActionPerformed(evt);
            }
        });
        jToolBar1.add(EditCol);
        jToolBar1.add(jSeparator10);

        Help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/help.png"))); // NOI18N
        Help.setText("Help");
        Help.setToolTipText("Help");
        Help.setFocusable(false);
        Help.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Help.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });
        jToolBar1.add(Help);

        jPanelDataBase.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Data bases");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("x");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel3MouseReleased(evt);
            }
        });

        jScrollPane5.setViewportView(jTree1);

        javax.swing.GroupLayout jPanelDataBaseLayout = new javax.swing.GroupLayout(jPanelDataBase);
        jPanelDataBase.setLayout(jPanelDataBaseLayout);
        jPanelDataBaseLayout.setHorizontalGroup(
            jPanelDataBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDataBaseLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jSeparator6, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
        );
        jPanelDataBaseLayout.setVerticalGroup(
            jPanelDataBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDataBaseLayout.createSequentialGroup()
                .addGroup(jPanelDataBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE))
        );

        jLabel1.setText("Proteins selected:");

        jLabelCountLoaded.setText("0");

        jLabelLoadingProteins.setText("Loading proteins...");

        jLabelCancelLoad.setBackground(new java.awt.Color(255, 0, 0));
        jLabelCancelLoad.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabelCancelLoad.setForeground(new java.awt.Color(255, 0, 0));
        jLabelCancelLoad.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelCancelLoad.setText("X");
        jLabelCancelLoad.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelCancelLoad.setEnabled(false);
        jLabelCancelLoad.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jLabelCancelLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelLoad(evt);
            }
        });

        javax.swing.GroupLayout jPanelEstateLayout = new javax.swing.GroupLayout(jPanelEstate);
        jPanelEstate.setLayout(jPanelEstateLayout);
        jPanelEstateLayout.setHorizontalGroup(
            jPanelEstateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEstateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCountLoaded, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 775, Short.MAX_VALUE)
                .addComponent(jLabelLoadingProteins)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCancelLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
        jPanelEstateLayout.setVerticalGroup(
            jPanelEstateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEstateLayout.createSequentialGroup()
                .addGroup(jPanelEstateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEstateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabelCountLoaded))
                    .addComponent(jLabelLoadingProteins)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCancelLoad))
                .addContainerGap())
        );

        jPanelSearcher.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PDBNombre", "Classification", "Molecule", "Length", "Chains"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                showProtein(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                showPropertiesKeyPress(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanelSearcherLayout = new javax.swing.GroupLayout(jPanelSearcher);
        jPanelSearcher.setLayout(jPanelSearcherLayout);
        jPanelSearcherLayout.setHorizontalGroup(
            jPanelSearcherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
        );
        jPanelSearcherLayout.setVerticalGroup(
            jPanelSearcherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(jPanelSearcher);

        jPanelProteinProperties.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelProteinProperties.setText("Protein properties");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("x");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel5MouseReleased(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null},
                {"", null},
                {"", null},
                {"", null},
                {"", null},
                {"", null},
                {"", null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                " Field", " Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable2);

        javax.swing.GroupLayout jPanelProteinPropertiesLayout = new javax.swing.GroupLayout(jPanelProteinProperties);
        jPanelProteinProperties.setLayout(jPanelProteinPropertiesLayout);
        jPanelProteinPropertiesLayout.setHorizontalGroup(
            jPanelProteinPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelProteinPropertiesLayout.createSequentialGroup()
                .addComponent(jLabelProteinProperties, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addGap(91, 91, 91)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
            .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
        );
        jPanelProteinPropertiesLayout.setVerticalGroup(
            jPanelProteinPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProteinPropertiesLayout.createSequentialGroup()
                .addGroup(jPanelProteinPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProteinProperties, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanelProteinProperties);

        jPanelSearchProt.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Basic Search"));

        jLabel6.setText("PDB Id");

        jTextFieldPDBID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPDBIDActionPerformed(evt);
            }
        });
        jTextFieldPDBID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                executeSimpleSearch(evt);
            }
        });

        jLabel7.setText("eg: 1A1I;2SN3;2SN3");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldPDBID, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldPDBID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Avanced search"));

        jCheckBoxLength.setText("Using length restriction");
        jCheckBoxLength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxLengthActionPerformed(evt);
            }
        });
        jCheckBoxLength.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                executeAvancedSearch(evt);
            }
        });

        jTextlengthMIN.setEditable(false);
        jTextlengthMIN.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextlengthMIN.setText("0");

        jLabel9.setText("-");

        jTextlengthMAX.setEditable(false);
        jTextlengthMAX.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextlengthMAX.setText("-1");

        jCheckBoxResolution.setText("Using resolution restiction");
        jCheckBoxResolution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxResolutionActionPerformed(evt);
            }
        });

        jTextResolMIN.setEditable(false);
        jTextResolMIN.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextResolMIN.setText("0");

        jLabel11.setText("-");

        jTextResolMAX.setEditable(false);
        jTextResolMAX.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextResolMAX.setText("-1");

        jCheckBoxHeteroA.setText("Using hetero atoms.");

        jCheckBoxNucleisA.setText("Using nucleis acid atoms.");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Experimental Method"));

        jScrollPane1.setViewportView(jListExpMethod);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Common Organism"));

        jScrollPane2.setViewportView(jListCommonOrg);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBoxNucleisA, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxLength, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jTextlengthMIN, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextlengthMAX, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jTextResolMIN, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextResolMAX, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBoxResolution, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                    .addComponent(jCheckBoxHeteroA, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jCheckBoxLength)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextlengthMIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextlengthMAX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxResolution)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextResolMIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextResolMAX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxHeteroA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxNucleisA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setText("Proteins search");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("x");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel12MouseReleased(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/SearchDB.png"))); // NOI18N
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchProtLayout = new javax.swing.GroupLayout(jPanelSearchProt);
        jPanelSearchProt.setLayout(jPanelSearchProtLayout);
        jPanelSearchProtLayout.setHorizontalGroup(
            jPanelSearchProtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchProtLayout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
            .addGroup(jPanelSearchProtLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelSearchProtLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelSearchProtLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addContainerGap(185, Short.MAX_VALUE))
        );
        jPanelSearchProtLayout.setVerticalGroup(
            jPanelSearchProtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchProtLayout.createSequentialGroup()
                .addGroup(jPanelSearchProtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSearchSeq.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Create expression"));

        jExpression.setToolTipText("");

        jLabel8.setText("Examples: H2C3S1=HHCCCS, H=HHH..., 9=HHCCSSSSH");

        jLabel13.setText("Concatenate rank.");

        jComboConcat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jExpression, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jComboConcat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jExpression, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboConcat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel14.setText("Subsequences search");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("x");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel15MouseReleased(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Apply filter"));

        jLabel16.setText("Desired Amino Acids");

        jLabel17.setText("Example: A;C;D");

        jLabel18.setText("Unwanted Amino Acid");

        jLabel19.setText("Example: E;H;D");

        jLabel20.setText("Hidrofobic property");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "no", "yes", "undefined" }));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel20))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDAA, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addComponent(jUAA, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jDAA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jUAA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        saveInDB.setText("Save subsequeces in DB");
        saveInDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveInDBActionPerformed(evt);
            }
        });

        saveInFile.setText("Save sequeces in *.txt file");
        saveInFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveInFileActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/SearchDB.png"))); // NOI18N
        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchSeqLayout = new javax.swing.GroupLayout(jPanelSearchSeq);
        jPanelSearchSeq.setLayout(jPanelSearchSeqLayout);
        jPanelSearchSeqLayout.setHorizontalGroup(
            jPanelSearchSeqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchSeqLayout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelSearchSeqLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
            .addGroup(jPanelSearchSeqLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelSearchSeqLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addContainerGap(271, Short.MAX_VALUE))
            .addGroup(jPanelSearchSeqLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saveInDB, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveInFile)
                .addGap(32, 32, 32))
        );
        jPanelSearchSeqLayout.setVerticalGroup(
            jPanelSearchSeqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchSeqLayout.createSequentialGroup()
                .addGroup(jPanelSearchSeqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addGap(170, 170, 170)
                .addGroup(jPanelSearchSeqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveInDB)
                    .addComponent(saveInFile))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1169, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanelDataBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSearchSeq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSearchProt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanelEstate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addComponent(jPanelDataBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelSearchSeq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelSearchProt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelEstate, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoadPDBFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadPDBFileActionPerformed
        loadPDB();
    }//GEN-LAST:event_LoadPDBFileActionPerformed

    private void SavePDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavePDBActionPerformed
        savePDB();
}//GEN-LAST:event_SavePDBActionPerformed

    private void jLabel3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseReleased
        jPanelDataBase.setVisible(false);
    }//GEN-LAST:event_jLabel3MouseReleased

    private void jLabel5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseReleased
        jPanelProteinProperties.setVisible(false);
    }//GEN-LAST:event_jLabel5MouseReleased

    private void EditColActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditColActionPerformed
        jPanelSearchProt.setVisible(false);
        jPanelProteinProperties.setVisible(!jPanelProteinProperties.isVisible());
        jSplitPane1.setDividerLocation(jSplitPane1.getMaximumDividerLocation());
    }//GEN-LAST:event_EditColActionPerformed

    private void SearchPDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchPDBActionPerformed
        jPanelProteinProperties.setVisible(false);
        jPanelSearchSeq.setVisible(false);
        jPanelSearchProt.setVisible(!jPanelSearchProt.isVisible());
    }//GEN-LAST:event_SearchPDBActionPerformed

    private void jCheckBoxResolutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxResolutionActionPerformed
        setAccecibleResolution();
}//GEN-LAST:event_jCheckBoxResolutionActionPerformed

    private void executeAvancedSearch(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_executeAvancedSearch
}//GEN-LAST:event_executeAvancedSearch

    private void jCheckBoxLengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxLengthActionPerformed
        setAccesibleLength();
}//GEN-LAST:event_jCheckBoxLengthActionPerformed

    private void executeSimpleSearch(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_executeSimpleSearch
        if (evt.getKeyCode() == 10) {
            simpleSearchID();
        }
}//GEN-LAST:event_executeSimpleSearch

    private void jTextFieldPDBIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPDBIDActionPerformed
}//GEN-LAST:event_jTextFieldPDBIDActionPerformed

    private void sequenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequenceActionPerformed
        jPanelSearchProt.setVisible(false);
        jPanelSearchSeq.setVisible(!jPanelSearchSeq.isVisible());
    }//GEN-LAST:event_sequenceActionPerformed

    private void ConectDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConectDBActionPerformed
        jPanelDataBase.setVisible(true);
        connectDB();
    }//GEN-LAST:event_ConectDBActionPerformed

    private void OpenDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenDBActionPerformed
        jPanelDataBase.setVisible(true);
        openDB();
    }//GEN-LAST:event_OpenDBActionPerformed

    private void CreateDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateDBActionPerformed
        jPanelDataBase.setVisible(true);
        newDB();
    }//GEN-LAST:event_CreateDBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Select_Cancel();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        deletePDB();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed
        runHelp();
    }//GEN-LAST:event_HelpActionPerformed

    private void jLabel12MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseReleased
        jPanelSearchProt.setVisible(false);
    }//GEN-LAST:event_jLabel12MouseReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (!jTextFieldPDBID.getText().isEmpty()) {
            simpleSearchID();
        } else {
            advancedSearch();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cancelLoad(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelLoad
        loadThread.stop();
        jLabelLoadingProteins.setVisible(false);
        jLabelCancelLoad.setEnabled(false);
        jProgressBar1.setValue(0);
    }//GEN-LAST:event_cancelLoad

    private void jLabel15MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseReleased
        jPanelSearchSeq.setVisible(false);
    }//GEN-LAST:event_jLabel15MouseReleased

    private void showPropertiesKeyPress(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_showPropertiesKeyPress
        if (evt.getKeyCode() == 38 || evt.getKeyCode() == 40) {
            showProperties();
        }
}//GEN-LAST:event_showPropertiesKeyPress

    private void showProtein(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showProtein
        showProperties();
}//GEN-LAST:event_showProtein

    private void saveInDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveInDBActionPerformed
        saveSubsequencesDB(jExpression.getText().toUpperCase());
}//GEN-LAST:event_saveInDBActionPerformed

    private void saveInFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveInFileActionPerformed
        saveSubsequencesInFile();
}//GEN-LAST:event_saveInFileActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        createExpression(jExpression.getText().isEmpty() ? " " : jExpression.getText().toUpperCase(), Integer.parseInt(jComboConcat.getSelectedItem().toString().equals("-") ? "0" : jComboConcat.getSelectedItem().toString()));
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUI().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConectDB;
    private javax.swing.JButton CreateDB;
    private javax.swing.JButton EditCol;
    private javax.swing.JButton Help;
    private javax.swing.JButton LoadPDBFile;
    private javax.swing.JButton OpenDB;
    private javax.swing.JButton SavePDB;
    private javax.swing.JButton SearchPDB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBoxHeteroA;
    private javax.swing.JCheckBox jCheckBoxLength;
    private javax.swing.JCheckBox jCheckBoxNucleisA;
    private javax.swing.JCheckBox jCheckBoxResolution;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboConcat;
    private javax.swing.JTextField jDAA;
    private javax.swing.JTextField jExpression;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCancelLoad;
    private javax.swing.JLabel jLabelCountLoaded;
    private javax.swing.JLabel jLabelLoadingProteins;
    private javax.swing.JLabel jLabelProteinProperties;
    private javax.swing.JList jListCommonOrg;
    private javax.swing.JList jListExpMethod;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelDataBase;
    private javax.swing.JPanel jPanelEstate;
    private javax.swing.JPanel jPanelProteinProperties;
    private javax.swing.JPanel jPanelSearchProt;
    private javax.swing.JPanel jPanelSearchSeq;
    private javax.swing.JPanel jPanelSearcher;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextFieldPDBID;
    private javax.swing.JTextField jTextResolMAX;
    private javax.swing.JTextField jTextResolMIN;
    private javax.swing.JTextField jTextlengthMAX;
    private javax.swing.JTextField jTextlengthMIN;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTree jTree1;
    private javax.swing.JTextField jUAA;
    private javax.swing.JButton saveInDB;
    private javax.swing.JButton saveInFile;
    private javax.swing.JButton sequence;
    // End of variables declaration//GEN-END:variables
    private ArrayList<String> absolutePaht = new ArrayList<String>();
    private Kernel kernel = new Kernel();
    private DefaultMutableTreeNode model = new DefaultMutableTreeNode("DataBases");
    private File file = new File("database\\DataBase.db");
    private DefaultMutableTreeNode node = new DefaultMutableTreeNode(file);
    private JTree jt;
    LoadThread loadThread = null;
    String estructure1D;
    String estructure2D;
    PeptideAnalysis pa;
    String PDBID = "";

    private void refreshList() {
        ArrayList<String> expMeth = kernel.getExperimentalMethods();
        ArrayList<String> commOrg = kernel.getCommonOrgenism();
        String[] EM = new String[expMeth.size() + 2];
        EM[0] = "No one";
        EM[1] = "Anyone";
        String[] CO = new String[commOrg.size() + 2];
        CO[0] = "No one";
        CO[1] = "Anyone";
        for (int j = 0; j < expMeth.size(); j++) {
            EM[j + 2] = expMeth.get(j);
        }
        for (int j = 1; j < commOrg.size(); j++) {
            CO[j + 1] = commOrg.get(j);//el primero biene con ""
        }
        final String[] ExpMethods = EM;
        final String[] CommOrg = CO;
        jListExpMethod.setModel(new javax.swing.AbstractListModel() {

            String[] strings = ExpMethods;

            public int getSize() {
                return strings.length;
            }

            public Object getElementAt(int i) {
                return strings[i];
            }
        });
        jListExpMethod.setSelectedIndex(0);
        jListCommonOrg.setModel(new javax.swing.AbstractListModel() {

            String[] strings = CommOrg;

            public int getSize() {
                return strings.length;
            }

            public Object getElementAt(int i) {
                return strings[i];
            }
        });
        jListCommonOrg.setSelectedIndex(0);
        if (expMeth.isEmpty() && commOrg.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No find experimantal methods and common organism in data base.");
        } else {
            if (expMeth.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No find experimantal methods in data base.");
            }
            if (commOrg.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No find common organism in data base.");
            }
        }
    }

    private void connectDB() {
        String connection = jTree1.getSelectionPath().getLastPathComponent().toString();
        kernel = new Kernel("jdbc:sqlite:" + connection);
        refreshList();
    }

    private void openDB() {
        String path = kernel.getPathOfExistDB();
        if (path.endsWith(".db") || path.endsWith(".sqlite")) {
            file = new File(path);
            node = new DefaultMutableTreeNode(file);
            model.insert(node, 0);
            jt = new JTree(model);
            jTree1.setModel(jt.getModel());
        }

    }

    private void newDB() {
        String path = kernel.getTarget();
        if (path.endsWith(".db") || path.endsWith(".sqlite")) {
            kernel.CreateDBWithTables(path);
            file = new File(path);
            node = new DefaultMutableTreeNode(file);
            model.insert(node, 0);
            jt = new JTree(model);
            jTree1.setModel(jt.getModel());
        }
    }

    private void showProperties() {
        jTable2.setModel(new javax.swing.table.DefaultTableModel(kernel.getModelByColumns(jTable1.getSelectedRow()), new Object[]{"Field", "Value"}));
        jLabelProteinProperties.setText("Protein properties");
    }

    private void showPropertiesLoaded() {
        int selected = 0;
        jTable2.setModel(new javax.swing.table.DefaultTableModel(kernel.getModelByColumns(selected), new Object[]{"Field", "Value"}));
    }

    private void simpleSearchID() {
        kernel.splitTextBySemicolonForSearch(jTextFieldPDBID.getText().toUpperCase());
        jTable1.setModel(new javax.swing.table.DefaultTableModel(kernel.getModelByRows(), new Object[]{"PDBName", "Classification", "Molecule", "Length", "Chains"}));
        if (!kernel.getInDataBase().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No find: " + kernel.getInDataBase());
        } else {
            jTextFieldPDBID.setText("");
        }
        jLabelCountLoaded.setText(String.valueOf(jTable1.getRowCount()));
        showPropertiesLoaded();
    }

    private void advancedSearch() {
        absolutePaht.clear();
        String[] array = new String[15];
        String ExperimantalMethod = "";
        String CommonOrganism = "";

        if (!jListExpMethod.isSelectedIndex(0)) {
            if (!jListExpMethod.isSelectedIndex(1)) {
                for (int i = 2; i < jListExpMethod.getModel().getSize(); i++) {
                    if (jListExpMethod.isSelectedIndex(i)) {
                        ExperimantalMethod += jListExpMethod.getModel().getElementAt(i).toString() + ";";
                    }
                }
            } else {
                for (int i = 2; i < jListExpMethod.getModel().getSize(); i++) {
                    ExperimantalMethod += jListExpMethod.getModel().getElementAt(i).toString() + ";";
                }
            }
        }

        if (!jListCommonOrg.isSelectedIndex(0)) {
            if (!jListCommonOrg.isSelectedIndex(1)) {
                for (int i = 2; i < jListCommonOrg.getModel().getSize(); i++) {
                    if (jListCommonOrg.isSelectedIndex(i)) {
                        CommonOrganism += jListCommonOrg.getModel().getElementAt(i).toString() + ";";
                    }
                }
            } else {
                for (int i = 2; i < jListCommonOrg.getModel().getSize(); i++) {
                    CommonOrganism += jListCommonOrg.getModel().getElementAt(i).toString() + ";";
                }
            }
        }
        try {
            if (jCheckBoxLength.isSelected()) {
                String text = jTextlengthMIN.getText();
                String text1 = jTextlengthMAX.getText();
                Scanner s = new Scanner(text.replace(",", "."));
                int nextInt = s.nextInt();
                Scanner s1 = new Scanner(text1.replace(",", "."));
                int nextInt1 = s1.nextInt();
                array[3] = text.replace(",", ".") + "&" + text1.replace(",", ".");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Must insert numerical data.");
        }
        try {
            if (jCheckBoxResolution.isSelected()) {
                String text = jTextResolMIN.getText();
                String text1 = jTextResolMAX.getText();
                Scanner s = new Scanner(text.replace(",", "."));
                float nextFloat = s.nextFloat();
                Scanner s1 = new Scanner(text1.replace(",", "."));
                float nextFloat1 = s1.nextFloat();
                array[8] = text.replace(",", ".");
                array[9] = text1.replace(",", ".");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Must insert numerical data.");
        }
        if (jCheckBoxHeteroA.isSelected()) {
            array[5] = "0";
        }
        if (jCheckBoxNucleisA.isSelected()) {
            array[14] = "0";
        }
        if (!ExperimantalMethod.isEmpty()) {
            array[7] = ExperimantalMethod.substring(0, ExperimantalMethod.length() - 1);
        }
        if (!CommonOrganism.isEmpty()) {
            array[11] = CommonOrganism.substring(0, CommonOrganism.length() - 1);
        }
        try {
            kernel.SearcherAvanced(array);
            if (!kernel.getInDataBase().isEmpty()) {
                JOptionPane.showMessageDialog(null, "No find proteins with this parameters");
            } else {
                jTable1.setModel(new javax.swing.table.DefaultTableModel(kernel.getModelByRows(), new Object[]{"PDBName", "Classification", "Molecule", "Length", "Chains"}));
            }
        } catch (Exception e) {
        }
        jLabelCountLoaded.setText(String.valueOf(jTable1.getRowCount()));
        showPropertiesLoaded();
    }

    private void loadPDB() {
        loadThread = new LoadThread(kernel, jProgressBar1, jLabelLoadingProteins, jLabelCancelLoad);
        loadThread.start();
    }

    private void deletePDB() {
        try {
            for (int i = jTable1.getRowCount() - 1; i >= 0; i--) {
                if (jTable1.isRowSelected(i)) {
                    String PDBNameId = (String) jTable1.getValueAt(i, 0);
                    if (kernel.DeletePDBInDataBase(PDBNameId)) {
                        ((DefaultTableModel) jTable1.getModel()).removeRow(i);
                    } else {
                        //puedo tener cargado en la tabla un PDB y que sea borrado en ese mismo momento de la base de datos, no se actualiza constantemene
                        JOptionPane.showMessageDialog(null, "Not exist " + PDBNameId + " in database.");
                    }
                }
            }
        } catch (Exception e) {
            System.out.print("error");
        }
        jLabelCountLoaded.setText(String.valueOf(jTable1.getRowCount()));
    }

    private void Select_Cancel() {
        try {
            if (jTable1.getRowCount() != jTable1.getSelectedRowCount()) {
                jTable1.setRowSelectionInterval(0, jTable1.getRowCount() - 1);
            } else {
                jTable1.setSelectionModel(new DefaultListSelectionModel());
            }
        } catch (Exception e) {
        }
    }

    private void savePDB() {
        try {
            ArrayList<String> Pahts = new ArrayList<String>();
            for (int i = jTable1.getRowCount() - 1; i >= 0; i--) {
                if (jTable1.isRowSelected(i)) {
                    Pahts.add(kernel.getPDBLoaded().get(i)[15].toString());
                }
            }
            if (!Pahts.isEmpty()) {
                ArrayList<String> target = kernel.getPDBTarget(Pahts);
                for (int i = 0; i < target.size(); i++) {
                    kernel.SavePDBInFile(Pahts.get(i), target.get(i));
                }
            }
        } catch (Exception ex) {
            System.out.println("error");
        }
    }

    private void setAccesibleLength() {
        if (jCheckBoxLength.isSelected()) {
            jTextlengthMIN.setEditable(true);
            jTextlengthMAX.setEditable(true);
        } else {
            jTextlengthMIN.setEditable(false);
            jTextlengthMAX.setEditable(false);
        }
    }

    private void setAccecibleResolution() {
        if (jCheckBoxResolution.isSelected()) {
            jTextResolMIN.setEditable(true);
            jTextResolMAX.setEditable(true);
        } else {
            jTextResolMIN.setEditable(false);
            jTextResolMAX.setEditable(false);
        }
    }

    private void runHelp() {
        try {
            try {
                File f = new File("help/masear_help.html");
                String uri = f.getAbsolutePath().replaceAll(" ", "%");
                uri = uri.replace("\\", "/");
                Desktop.getDesktop().browse(new URI("file:///" + uri));
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (URISyntaxException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void createExpression(String text, int i) {
        if (jTable1.getSelectedRow() != -1) {//esto solo para saber si se selecciono algona fila
            String textCorrected = kernel.correctError(text, jTable1.getSelectedRows(), jExpression);
//            if (kernel.loadSubsequences(text, jTable1.getSelectedRows()) && jDAA.getText().isEmpty() && jUAA.getText().isEmpty() && jComboConcat.getSelectedIndex() == 0) {
//                jTable2.setModel(new javax.swing.table.DefaultTableModel(kernel.getSubsequencesModel(), new Object[]{"PDBName", "Subsequences", "Expression"}));
//            } else {
                jTable2.setModel(new javax.swing.table.DefaultTableModel(kernel.getSubsequencesModel(textCorrected, i, jTable1.getSelectedRows(), jTable1.getSelectedRowCount(), jExpression), new Object[]{"PDBName", "Subsequences", "Expression"}));
                jLabelProteinProperties.setText("Subsequences");
                if (!jDAA.getText().isEmpty() || !jUAA.getText().isEmpty() || jComboConcat.getSelectedIndex() != 0) {
                    jTable2.setModel(new javax.swing.table.DefaultTableModel(kernel.applyFilter(textCorrected, i, jTable1.getSelectedRows(), jTable1.getSelectedRowCount(), jDAA.getText(), jUAA.getText(), jComboConcat.getSelectedItem(), jExpression), new Object[]{"PDBName", "Subsequences", "Expression"}));
                }
                jPanelProteinProperties.setVisible(true);
                jSplitPane1.setDividerLocation(jSplitPane1.getMaximumDividerLocation());
//            }
        } else {
            JOptionPane.showMessageDialog(null, "You most select a protein before looking for Subsequences.");
        }

    }

    private void saveSubsequencesDB(String text) {
        boolean saveSubsequence = kernel.saveSubsequence(text);
        String message = saveSubsequence ? "Saved correctly." : "Saved incorrectly.";
        JOptionPane.showMessageDialog(null, message);
    }

    private void saveSubsequencesInFile() {
        boolean saveSubsequence = kernel.saveSubsequenceInFile();
        String message = saveSubsequence ? "Saved correctly." : "Saved incorrectly.";
        JOptionPane.showMessageDialog(null, message);
    }

    private void createTables() {
        kernel.CreateDBWithTables();
    }
}
